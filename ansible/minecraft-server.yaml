---
- hosts: "mcservers"
  vars: 
    packages: ['vim', 'wget', 'jdk-19-headless.aarch64']
    mcs_dir: /minecraft
    mcs_jar_url: https://piston-data.mojang.com/v1/objects/f69c284232d7c7580bd89a5a4931c3581eae1378/server.jar
    fabric_jar_url: https://meta.fabricmc.net/v2/versions/loader/1.19.2/0.14.10/0.11.1/server/jar
    fedora_project_gpg: https://download-ib01.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-9
    screen_rpm_url: https://download-ib01.fedoraproject.org/pub/epel/9/Everything/aarch64/Packages/s/screen-4.8.0-6.el9.aarch64.rpm
    session_name: survival

  tasks:
    - name: Update yum
      become: yes
      yum: update_cache=yes name='*' state=latest

    - name: Get packages 
      become: yes
      yum: name={{ item }} state=latest
      with_items: "{{ packages }}"
    
    - name: Import a key from a file
      become: yes
      ansible.builtin.rpm_key:
        state: present
        key: "{{ fedora_project_gpg }}"

    - name: Install package.
      become: yes
      yum:
        name: '{{ screen_rpm_url }}'
        state: installed

    - name: Create minecraftserver dir
      become: yes
      file: state=directory path={{ mcs_dir }}

    - name: Set minecraftserver dir permissions
      become: yes
      file:
        path: "{{ mcs_dir }}"
        state: directory
        owner: opc
        group: opc
        mode: "0770"

    - name: Wget java fabric minecraft jar
      get_url:
        url: '{{ fabric_jar_url }}'
        dest: '{{ mcs_dir }}/server.jar'

    - name: install fabric modding api
      command: java -jar server.jar server -mcversion 1.19.2 -downloadMinecraft
      args:
       chdir: '{{ mcs_dir }}'

    - name: Agree to EULA
      template: src=eula.tpl dest='{{ mcs_dir }}/eula.txt'

    - name: Set server properties file
      run_once: true
      template: src=server.properties.tpl dest='{{ mcs_dir }}/server.properties'

    - name: Set server whitelist file
      run_once: true
      template: src=whitelist.json.tpl dest='{{ mcs_dir }}/whitelist.json'

    - name: Set server ops file
      run_once: true
      template: src=ops.json.tpl dest='{{ mcs_dir }}/ops.json'

    - name: Check screen for running sessions
      shell: screen -ls
      register: sessions
      failed_when: sessions.rc == 0 or sessions.rc >= 2

    - name: Run mcserver
      command: screen -s {{ session_name }} -d -m java -Xmx4096M -Xms1024M -jar {{ mcs_dir }}/server.jar nogui
      args:
        chdir: '{{ mcs_dir }}'
      when: sessions.stdout.find(session_name) == -1

    - name: Update Linux FW
      become: yes
      shell:
        cmd: |
          firewall-cmd --permanent --zone=public --add-port=25565/tcp
          firewall-cmd --permanent --zone=public --add-port=25565/udp
          firewall-cmd --reload